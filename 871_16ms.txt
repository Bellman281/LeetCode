static int x = []() { ios::sync_with_stdio(false); cin.tie(NULL); return 0; }();

class Solution {
public:
    int minRefuelStops(int target, int startFuel, vector<vector<int>>& stations) {
        if(startFuel>=target)return 0;
        int i,j;
        int sumfuel = startFuel;
        int vis[510];
        memset(vis,0,sizeof(vis));
        for(i=1;i<=stations.size();i++){
            int max = -1;
            int last = -1;
            for(j=0;j<stations.size();j++){
                if(vis[j]!=0)continue;
                if(sumfuel>=stations[j][0]){
                    int tmp = sumfuel + stations[j][1];
                    if(tmp>=target){ return i; }
                    if(tmp>max){
                        max = tmp;
                        last = j;
                    }
                }else{ break; }
            }
            if(max>0){
                sumfuel = max;
                vis[last] = 1;
            }else{ return -1; }
        }
        return -1;
    }
};