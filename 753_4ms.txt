class Solution {
public:
    string crackSafe(int n, int k) {
        int index = 0;
        string result(n - 1, '0');
        unordered_map<string, int> nextDigit;
        
        while (true) {
            string key = result.substr(index);
            
            if (nextDigit.find(key) == nextDigit.end()) {
                nextDigit[key] = k - 1;
            }
            if (nextDigit[key] < 0) {
                break;
            }
            result.push_back(nextDigit[key] + '0');
            nextDigit[key]--;
            index++;
        }
        
        return result;
    }
};