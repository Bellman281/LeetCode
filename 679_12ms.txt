class Solution {
public:
    bool judgePoint24(vector<int>& nums) {
        vector<int> used(4);
        return dfs(nums, used, 0, 0.0, 24.0);
    }
    
    bool dfs(vector<int> & nums, vector<int> & used, int n, double cur_val, double target) {
        if(n==4)
            return abs(cur_val-target)<1E-6;
        bool any = false;
        for(int i=0; i<nums.size(); i++) {
            if(used[i])
                continue;
            used[i] = 1;
            any |= dfs(nums,used, n+1, cur_val+nums[i], target);
            if(n!=0)
                any |= dfs(nums,used, n+1, cur_val/nums[i], target);
            if(n!=0)
                any |= dfs(nums,used, n+1, cur_val*nums[i], target);
            any |= dfs(nums,used, n+1, cur_val-nums[i], target);
            if(n!=0&&cur_val!=0.0)
                any |= dfs(nums,used, n+1, nums[i], target*cur_val);
            if(n!=0||cur_val!=0.0)
                any |= dfs(nums,used, n+1, nums[i], target/cur_val);
            if(n!=0)
                any |= dfs(nums,used, n+1, nums[i], target+cur_val);
            if(n!=0)
                any |= dfs(nums,used, n+1, nums[i], target-cur_val);
            used[i] = 0;
        }
        return any;
    }
};